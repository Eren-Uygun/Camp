package com.appsdeveloperblog.photoapp.api.account.features.accountTypes.commands.delete;

import org.axonframework.eventhandling.EventHandler;
import org.modelmapper.ModelMapper;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.appsdeveloperblog.photoapp.api.account.domain.AccountType;
import com.appsdeveloperblog.photoapp.api.account.features.accountTypes.commands.create.AccountTypeCreatedEvent;
import com.appsdeveloperblog.photoapp.api.account.persistance.AccountTypeRepository;

@Component
public class AccountTypeDeleteEventsHandler {
	
	private AccountTypeRepository accountTypeRepository;
	private ModelMapper mapper;

 
	@Autowired
	public AccountTypeDeleteEventsHandler(AccountTypeRepository accountTypeRepository, ModelMapper mapper) {
		super();
		this.accountTypeRepository = accountTypeRepository;
		this.mapper = mapper;
	}



	//On'daki metot event olarak fırlatıldığında bunu on'un içi çalışıyor.
	@EventHandler
	public void on(AccountTypeDeletedEvent accountTypeDeletedEvent) {
		var accountType = this.accountTypeRepository.getById(accountTypeDeletedEvent.getAccountTypeId());
		//Burda modelmapper'de kullanılabilir.
		BeanUtils.copyProperties(accountTypeDeletedEvent, accountType);
		

		
		this.accountTypeRepository.deleteById(accountType.getAccountTypeId());
		
	

}
}
